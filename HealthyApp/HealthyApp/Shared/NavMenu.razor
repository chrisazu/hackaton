@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">HealthyApp</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

@if (userAuthenticated)
{
    <div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
        <nav class="flex-column">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <span class="oi oi-home" aria-hidden="true"></span> Home
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="level/index">
                    <span class="oi oi-plus" aria-hidden="true"></span> Nivel
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="goals/index">
                    <span class="oi oi-plus" aria-hidden="true"></span> Objetivos
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="advisor/index">
                    <span class="oi oi-chat" aria-hidden="true"></span> Consejero
                </NavLink>
            </div>
        </nav>
    </div>
}

@code {

    private bool userAuthenticated;

    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        userAuthenticated = authState.User.Identity.IsAuthenticated;
    }
}
