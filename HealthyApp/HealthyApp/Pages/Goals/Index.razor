@page "/goals/index"
@page "/goals/index/{action}"
@using Blazored.Toast.Services;
@using Blazored.Toast;
@using Blazored.Toast.Configuration;
@using HealthyApp.Models.Requests;
@using HealthyApp.Models.Responses;
@using HealthyApp.Services.Interfaces;
@using HealthyApp.Services;
@using Microsoft.AspNetCore.Identity;
@using Microsoft.AspNetCore.Http

@inject IToastService toastService
@inject IGoalService _goalService
@inject SignInManager<IdentityUser> _signInManager
@inject IHealthyUserService _healthyUserService
@inject NavigationManager NavigationManager
@inject IHttpContextAccessor httpContextAccessor

<PageTitle>Mis objetivos</PageTitle>

<h1>Mis objetivos</h1>

@if (goals == null)
{
    <p><em>Cargando tus objetivos...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Nombre</th>
                <th>Descripción</th>
                <th>Tipo</th>
                <th>Duración</th>
                <th>Frequencia</th>
                <th>Fecha de creación</th>
                <th>Estado</th>
                <th>Progreso</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var goal in goals)
            {
                <tr>
                    <td>@goal.Name </td>
                    <td>@goal.Description </td>
                    <td>@goal.LabelType </td>
                    <td>
                        @if (!goal.IsDiet)
                        {
                            @goal.LabelDuration
                        }
                    </td>
                    <td>
                        @if (!goal.IsDiet)
                        {
                            @goal.LabelTimesPerFrequency
                        }
                    </td>
                    <td>@goal.CreatedDate.ToShortDateString()</td>
                    <td>@goal.LabelStatus</td>
                    <td>@goal.ShowProgress</td>
                    <td>
                        @if (!goal.IsGoalAccomplished)
                        {
                            <a href="@string.Format("goals/add-progress/{0}",goal.Id)">Agregar progreso</a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<div class="col-2">
    @if (goals?.Count() == 0)
    {
        <p><em>¡Cargá tu primer objetivo!</em></p>
    }
    <a type="button" class="btn btn-primary" href="@string.Format("goals/add")">Crear objetivo</a>
</div>

<BlazoredToasts Position="ToastPosition.TopRight"
                        Timeout="5"
                        IconType="IconType.FontAwesome"
                        SuccessClass="success-toast-override"
                        SuccessIcon="fa fa-thumbs-up"
                        ErrorIcon="fa fa-bug" />

@code {

#nullable enable
    [Parameter]
    public string? action { get; set; }
    private GoalResponse[] goals;

    protected async override Task OnInitializedAsync()
    {
        var userId = int.Parse(httpContextAccessor.HttpContext?.User.Claims.FirstOrDefault(c => c.Type == "userId")?.Value);

        var request = new Models.Requests.GoalRequest() { UserId = userId };
        goals = await _goalService.GetByUserId(request);
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (!firstRender)
        {
            if (!string.IsNullOrWhiteSpace(action))
            {
                if (action == "added")
                {
                    toastService.ShowSuccess("Objetivo agregado correctamente");
                }

                if (action == "progress-added")
                {
                    toastService.ShowSuccess("Progreso agregado correctamente");
                }
            }
        }
    }
}
