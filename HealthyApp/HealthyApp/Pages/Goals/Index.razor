@page "/goals/index"
@using HealthyApp.Models.Requests;
@using HealthyApp.Models.Responses;
@using HealthyApp.Services.Interfaces;
@using HealthyApp.Services;
@using Microsoft.AspNetCore.Identity;

@inject IGoalService _goalService
@inject SignInManager<IdentityUser> _signInManager
@inject IHealthyUserService _healthyUserService
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor httpContextAccessor


<PageTitle>Mis objetivos</PageTitle>

<h1>Mis objetivos</h1>

@if (goals == null)
{
    <p><em>Cargando tus objetivos...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Nombre</th>
                <th>Descripción</th>
                <th>Duración</th>
                <th>Frequencia</th>
                <th>Tiempo de frequencia</th>
                <th>Kilogramos</th>
                <th>Tipo</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var goal in goals)
            {
                <tr>
                    <td>@goal.Name </td>
                    <td>@goal.Description </td>
                    @*<td>@(isDiet!) ? @goal.Duration horas : @string.Empty </td>*@

                    <td>
                        @if (goal.Type != "Diet")
                        {
                            @string.Format("{0} horas",goal.Duration)
                        }
                    </td>
                    <td>
                        @if (goal.Type != "Diet")
                        {
                            @string.Format("{0}",goal.Frequency)
                        }
                    </td>
                    <td>
                        @if (goal.Type != "Diet")
                        {
                            @string.Format("{0} veces",goal.TimesPerFrequency)
                        }
                    </td>
                    <td>
                        @if (goal.Type == "Diet")
                        {
                            @string.Format("{0}",goal.Kilograms)
                        }
                    </td>
                    <td>@goal.Type </td>
                    <td><a href="@string.Format("goals/add-progress/{0}",goal.Id)">Agregar progreso</a></td>
                </tr>
            }
        </tbody>
    </table>
}

<div class="col-2">
    @if (goals?.Count() == 0)
    {
        <p><em>¡Cargá tu primer objetivo!</em></p>
    }
    <a type="button" class="btn btn-primary" href="@string.Format("goals/add")">Crear objetivo</a>
</div>

@code {

    private GoalResponse[] goals;

    private bool isDiet;

    protected async override Task OnInitializedAsync()
    {
        var userId = int.Parse(httpContextAccessor.HttpContext?.User.Claims.FirstOrDefault(c => c.Type == "userId")?.Value);

        var requ = new Models.Requests.GoalRequest() { UserId = userId };
        goals = await _goalService.GetByUserId(requ);
    }
}
