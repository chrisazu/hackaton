@page "/goals/add-progress/{goalId:int}"
@using HealthyApp.Models.Requests;
@using HealthyApp.Models.Responses;
@using HealthyApp.Models;
@using HealthyApp.Services.Interfaces;
@using HealthyApp.Services;
@using Microsoft.AspNetCore.Identity;
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Forms
@using System.Net.Http.Json;
@using Microsoft.AspNetCore.Http

@inject IGoalService _goalService
@inject SignInManager<IdentityUser> _signInManager
@inject IHealthyUserService _healthyUserService
@inject IGoalProgressService _goalProgressService
@inject NavigationManager NavigationManager
@inject IHttpContextAccessor httpContextAccessor

<PageTitle>@title</PageTitle>

<h1>@title</h1>

<h2>Ingresar progreso</h2>

<EditForm Model="@model" OnValidSubmit="@HandleSubmit">
    <DataAnnotationsValidator />
    @if (goal.Type == "2")
    {
        <div class="mb-3">
            <label for="DurationInMinutes" class="form-label">Kilos</label>
            <div class="col-md-2">
                <InputNumber id="DurationInMinutes" class="form-control" @bind-Value="model.DurationInMinutes" />
            </div>
            <ValidationMessage For="@(() => model.DurationInMinutes)" />
        </div>        
    }
    else
    {
        <div class="mb-3">
            <label for="DurationInMinutes" class="form-label">Tiempo</label>
            <div class="col-md-2">
                <InputNumber id="DurationInMinutes" class="form-control" @bind-Value="model.DurationInMinutes" />
            </div>
            <ValidationMessage For="@(() => model.DurationInMinutes)" />
        </div>
        <div class="mb-3">
            <label for="TimeType" class="form-label">Medida</label>
            <div class="col-md-2">
                <InputSelect id="TimeType" class="form-select" @bind-Value="model.TimeType">
                    <option value="1">Horas</option>
                    <option value="2">Minutos</option>
                </InputSelect>
            </div>
        </div>
    }
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Cargar</button>
        <button type="button" class="btn btn-light" @onclick="Cancel">Cancelar</button>
    </div>
</EditForm>

@code {

    private GoalResponse goal;

    string title => $"Objetivo: {goal?.Name}";

    private HealthyApp.Models.Requests.AddProgress model = new();

    private IEnumerable<TimeType> timeTypes = Enumerable.Empty<TimeType>();

    [Parameter]
    public int goalId { get; set; }

    protected async override Task OnInitializedAsync()
    {
        var userId = int.Parse(httpContextAccessor.HttpContext?.User.Claims.FirstOrDefault(c => c.Type == "userId")?.Value);

        var goalRequest = new Models.Requests.GoalRequest() { UserId = userId, Id = goalId };
        goal = await _goalService.GetById(goalRequest);
    }

    private async Task HandleSubmit()
    {
        var durationInMinutes = model.TimeType == TimeType.Hours ? 60 * model.DurationInMinutes : 1 * model.DurationInMinutes;

        var request = new GoalProgressRequest() { DurationInMinutes = durationInMinutes, GoalId = goal.Id };
        var response = await _goalProgressService.Create(request);

        if (response.Id != 0)
        {
            Cancel();
        }
    }

    public void Cancel()
    {
        NavigationManager.NavigateTo("/goals/index");
    }
}
